{"ast":null,"code":"var _jsxFileName = \"/Users/shilpapatel/shilpa/Self_Projects/movie-booking-app/movie_frontend/src/pages/BookNow.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import '../styles/bookNow.css';\n\n// function BookNow({ user }) {\n//   const { movieId } = useParams(); // Get the movie ID from the URL\n//   const [movie, setMovie] = useState(null);\n//   const [cinemas, setCinemas] = useState([]);\n//   const [selectedCinema, setSelectedCinema] = useState(null);\n//   const [selectedShowtime, setSelectedShowtime] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false); // State for showing the modal\n//   const [modalContent, setModalContent] = useState({}); // State to hold modal content\n//   const [bookingConfirmed, setBookingConfirmed] = useState(false); // State to track booking confirmation\n\n//   // Fetch movie details\n//   useEffect(() => {\n//     fetch(`http://localhost:5001/movies/${movieId}`)\n//       .then((response) => response.json())\n//       .then((data) => setMovie(data))\n//       .catch((error) => setError(error.message));\n//   }, [movieId]);\n\n//   // Fetch cinemas for the movieId\n//   useEffect(() => {\n//     fetch(`http://localhost:5001/cinemas/movie/${movieId}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.message && data.message === \"No cinemas found for this movie\") {\n//           setError(\"No cinemas found for this movie.\");\n//         } else {\n//           setCinemas(data);\n//           setError(null); // Clear any previous errors if cinemas are found\n//         }\n//       })\n//       .catch((error) => setError(error.message));\n//   }, [movieId]);\n\n//   // Handle showtime selection\n//   const handleShowtimeSelect = (showtime) => {\n//     setSelectedShowtime(showtime);\n//     if (selectedCinema) {\n//       const selectedCinemaDetails = cinemas.find(cinema => cinema._id === selectedCinema);\n\n//       // Set the modal content\n//       setModalContent({\n//         movieId: movieId,\n//         movieName: movie.movie_name,\n//         cinemaName: selectedCinemaDetails?.cinema_name,\n//         showtime: showtime.showtime,\n//       });\n//       setShowModal(true); // Show the modal\n//     }\n//   };\n\n//   // Confirm the booking and show confirmation\n//   const confirmBookingModal = () => {\n//     setBookingConfirmed(true); // Mark booking as confirmed\n//   };\n\n//   // Close the modal\n//   const closeModal = () => {\n//     setShowModal(false); // Close the modal\n//     setBookingConfirmed(false); // Reset booking confirmation state\n//   };\n\n//   // Check if movie is available\n//   if (!movie) {\n//     return <p>Loading movie details...</p>;\n//   }\n\n//   return (\n//     <div className=\"book-now-page\">\n//       {/* Sidebar */}\n//       <div className=\"sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h3>{user ? user.name : 'Guest'}</h3>\n//         </div>\n//         <div className=\"sidebar-links\">\n//           <a href=\"/my-account\">My Account</a>\n//           <a href=\"/my-bookings\">My Bookings</a>\n//           <a href=\"/logout\">Logout</a>\n//         </div>\n//       </div>\n\n//       <div className=\"content\">\n//         <header>\n//           <h1>Book Your Movie Ticket</h1>\n//           <h4>Movie: {movie.movie_name}</h4>\n//         </header>\n\n//         {/* Error message */}\n//         {error && (\n//           <p className=\"error-message\">\n//             {error}\n//           </p>\n//         )}\n\n//         {/* Cinema Selection */}\n//         {cinemas.length === 0 && !error && (\n//           <div className=\"no-cinemas\">\n//             <p className=\"error-message\">\n//               No cinemas available for booking for this movie.\n//             </p>\n//           </div>\n//         )}\n\n//         {cinemas.length > 0 && !error && (\n//           <div className=\"cinema-selection\">\n//             <h2>Select Your Cinema</h2>\n//             <div className=\"cinema-list\">\n//               {cinemas.map((cinema) => (\n//                 <div\n//                   key={cinema._id}\n//                   className={`cinema-item ${selectedCinema === cinema._id ? 'selected' : ''}`}\n//                   onClick={() => setSelectedCinema(cinema._id)} // Set selected cinema\n//                 >\n//                   <h3>{cinema.cinema_name}</h3>\n//                   {selectedCinema === cinema._id && (\n//                     <div className=\"showtimes\">\n//                       <h4>Available Showtimes:</h4>\n//                       {cinema.showtimes.length === 0 ? (\n//                         <p>No showtimes available.</p>\n//                       ) : (\n//                         cinema.showtimes.map((showtime, index) => (\n//                           <button\n//                             key={index}\n//                             className=\"showtime-btn\"\n//                             onClick={() => handleShowtimeSelect(showtime)} // Handle showtime selection\n//                           >\n//                             {showtime.showtime} - {new Date(showtime.date).toLocaleDateString()}\n//                           </button>\n//                         ))\n//                       )}\n//                     </div>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Modal Popup */}\n//         {showModal && !bookingConfirmed && (\n//           <div className=\"modal-overlay\">\n//             <div className=\"modal-content\">\n//               <h3>Booking Details</h3>\n//               <p><strong>Movie:</strong> {modalContent.movieName}</p>\n//               <p><strong>Cinema:</strong> {modalContent.cinemaName}</p>\n//               <p><strong>Showtime:</strong> {modalContent.showtime}</p>\n//               <button onClick={confirmBookingModal}>Confirm Booking</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Confirmation Popup */}\n//         {bookingConfirmed && (\n//           <div className=\"modal-overlay\">\n//             <div className=\"modal-content\">\n//               <p style={{ fontWeight: 'bold' }}>Booking Confirmed!!</p>\n//               <button onClick={closeModal}>Close</button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default BookNow;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/bookNow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookNow({\n  user\n}) {\n  _s();\n  const {\n    movieId\n  } = useParams(); // Get the movie ID from the URL\n  const [movie, setMovie] = useState(null);\n  const [cinemas, setCinemas] = useState([]);\n  const [selectedCinema, setSelectedCinema] = useState(null);\n  const [selectedShowtime, setSelectedShowtime] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false); // State for showing the modal\n  const [modalContent, setModalContent] = useState({}); // State to hold modal content\n  const [bookingConfirmed, setBookingConfirmed] = useState(false); // State to track booking confirmation\n\n  // Fetch movie details\n  useEffect(() => {\n    fetch(`http://localhost:5001/movies/${movieId}`).then(response => response.json()).then(data => setMovie(data)).catch(error => setError(error.message));\n  }, [movieId]);\n\n  // Fetch cinemas for the movieId\n  useEffect(() => {\n    fetch(`http://localhost:5001/cinemas/movie/${movieId}`).then(response => response.json()).then(data => {\n      if (data.message && data.message === \"No cinemas found for this movie\") {\n        setError(\"No cinemas found for this movie.\");\n      } else {\n        setCinemas(data);\n        setError(null); // Clear any previous errors if cinemas are found\n      }\n    }).catch(error => setError(error.message));\n  }, [movieId]);\n\n  // Handle showtime selection\n  const handleShowtimeSelect = showtime => {\n    setSelectedShowtime(showtime);\n    if (selectedCinema) {\n      const selectedCinemaDetails = cinemas.find(cinema => cinema._id === selectedCinema);\n\n      // Set the modal content\n      setModalContent({\n        movieId: movieId,\n        movieName: movie.movie_name,\n        cinemaName: selectedCinemaDetails === null || selectedCinemaDetails === void 0 ? void 0 : selectedCinemaDetails.cinema_name,\n        showtime: showtime.showtime\n      });\n      setShowModal(true); // Show the modal\n    }\n  };\n\n  // Confirm the booking and show confirmation\n  const confirmBookingModal = () => {\n    setBookingConfirmed(true); // Mark booking as confirmed\n  };\n\n  // Close the modal\n  const closeModal = () => {\n    setShowModal(false); // Close the modal\n    setBookingConfirmed(false); // Reset booking confirmation state\n  };\n\n  // Check if movie is available\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movie details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-now-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user ? user.name : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/my-bookings\",\n          children: \"My Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Book Your Movie Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Movie: \", movie.movie_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), cinemas.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-cinemas\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: \"No cinemas available for booking for this movie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), cinemas.length > 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cinema-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Your Cinema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cinema-list\",\n          children: cinemas.map(cinema => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cinema-item ${selectedCinema === cinema._id ? 'selected' : ''}`,\n            onClick: () => setSelectedCinema(cinema._id) // Set selected cinema\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cinema.cinema_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), selectedCinema === cinema._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"showtimes\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Available Showtimes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), cinema.showtimes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No showtimes available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 25\n              }, this) : cinema.showtimes.map((showtime, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"showtime-btn\",\n                onClick: () => handleShowtimeSelect(showtime) // Handle showtime selection\n                ,\n                children: [showtime.showtime, \" - \", new Date(showtime.date).toLocaleDateString()]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 27\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }, this)]\n          }, cinema._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), showModal && !bookingConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Booking Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Movie:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 18\n            }, this), \" \", modalContent.movieName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cinema:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 18\n            }, this), \" \", modalContent.cinemaName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Showtime:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 18\n            }, this), \" \", modalContent.showtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmBookingModal,\n            children: \"Confirm Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), bookingConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Booking Confirmed!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(BookNow, \"QUusX2NyU83cMiCSncL2BWul6nc=\", false, function () {\n  return [useParams];\n});\n_c = BookNow;\nexport default BookNow;\nvar _c;\n$RefreshReg$(_c, \"BookNow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","BookNow","user","_s","movieId","movie","setMovie","cinemas","setCinemas","selectedCinema","setSelectedCinema","selectedShowtime","setSelectedShowtime","error","setError","showModal","setShowModal","modalContent","setModalContent","bookingConfirmed","setBookingConfirmed","fetch","then","response","json","data","catch","message","handleShowtimeSelect","showtime","selectedCinemaDetails","find","cinema","_id","movieName","movie_name","cinemaName","cinema_name","confirmBookingModal","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","href","length","map","onClick","showtimes","index","Date","date","toLocaleDateString","style","fontWeight","_c","$RefreshReg$"],"sources":["/Users/shilpapatel/shilpa/Self_Projects/movie-booking-app/movie_frontend/src/pages/BookNow.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import '../styles/bookNow.css';\n\n// function BookNow({ user }) {\n//   const { movieId } = useParams(); // Get the movie ID from the URL\n//   const [movie, setMovie] = useState(null);\n//   const [cinemas, setCinemas] = useState([]);\n//   const [selectedCinema, setSelectedCinema] = useState(null);\n//   const [selectedShowtime, setSelectedShowtime] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [showModal, setShowModal] = useState(false); // State for showing the modal\n//   const [modalContent, setModalContent] = useState({}); // State to hold modal content\n//   const [bookingConfirmed, setBookingConfirmed] = useState(false); // State to track booking confirmation\n\n//   // Fetch movie details\n//   useEffect(() => {\n//     fetch(`http://localhost:5001/movies/${movieId}`)\n//       .then((response) => response.json())\n//       .then((data) => setMovie(data))\n//       .catch((error) => setError(error.message));\n//   }, [movieId]);\n\n//   // Fetch cinemas for the movieId\n//   useEffect(() => {\n//     fetch(`http://localhost:5001/cinemas/movie/${movieId}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.message && data.message === \"No cinemas found for this movie\") {\n//           setError(\"No cinemas found for this movie.\");\n//         } else {\n//           setCinemas(data);\n//           setError(null); // Clear any previous errors if cinemas are found\n//         }\n//       })\n//       .catch((error) => setError(error.message));\n//   }, [movieId]);\n\n//   // Handle showtime selection\n//   const handleShowtimeSelect = (showtime) => {\n//     setSelectedShowtime(showtime);\n//     if (selectedCinema) {\n//       const selectedCinemaDetails = cinemas.find(cinema => cinema._id === selectedCinema);\n      \n//       // Set the modal content\n//       setModalContent({\n//         movieId: movieId,\n//         movieName: movie.movie_name,\n//         cinemaName: selectedCinemaDetails?.cinema_name,\n//         showtime: showtime.showtime,\n//       });\n//       setShowModal(true); // Show the modal\n//     }\n//   };\n\n//   // Confirm the booking and show confirmation\n//   const confirmBookingModal = () => {\n//     setBookingConfirmed(true); // Mark booking as confirmed\n//   };\n\n//   // Close the modal\n//   const closeModal = () => {\n//     setShowModal(false); // Close the modal\n//     setBookingConfirmed(false); // Reset booking confirmation state\n//   };\n\n//   // Check if movie is available\n//   if (!movie) {\n//     return <p>Loading movie details...</p>;\n//   }\n\n//   return (\n//     <div className=\"book-now-page\">\n//       {/* Sidebar */}\n//       <div className=\"sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h3>{user ? user.name : 'Guest'}</h3>\n//         </div>\n//         <div className=\"sidebar-links\">\n//           <a href=\"/my-account\">My Account</a>\n//           <a href=\"/my-bookings\">My Bookings</a>\n//           <a href=\"/logout\">Logout</a>\n//         </div>\n//       </div>\n\n//       <div className=\"content\">\n//         <header>\n//           <h1>Book Your Movie Ticket</h1>\n//           <h4>Movie: {movie.movie_name}</h4>\n//         </header>\n\n//         {/* Error message */}\n//         {error && (\n//           <p className=\"error-message\">\n//             {error}\n//           </p>\n//         )}\n\n//         {/* Cinema Selection */}\n//         {cinemas.length === 0 && !error && (\n//           <div className=\"no-cinemas\">\n//             <p className=\"error-message\">\n//               No cinemas available for booking for this movie.\n//             </p>\n//           </div>\n//         )}\n\n//         {cinemas.length > 0 && !error && (\n//           <div className=\"cinema-selection\">\n//             <h2>Select Your Cinema</h2>\n//             <div className=\"cinema-list\">\n//               {cinemas.map((cinema) => (\n//                 <div\n//                   key={cinema._id}\n//                   className={`cinema-item ${selectedCinema === cinema._id ? 'selected' : ''}`}\n//                   onClick={() => setSelectedCinema(cinema._id)} // Set selected cinema\n//                 >\n//                   <h3>{cinema.cinema_name}</h3>\n//                   {selectedCinema === cinema._id && (\n//                     <div className=\"showtimes\">\n//                       <h4>Available Showtimes:</h4>\n//                       {cinema.showtimes.length === 0 ? (\n//                         <p>No showtimes available.</p>\n//                       ) : (\n//                         cinema.showtimes.map((showtime, index) => (\n//                           <button\n//                             key={index}\n//                             className=\"showtime-btn\"\n//                             onClick={() => handleShowtimeSelect(showtime)} // Handle showtime selection\n//                           >\n//                             {showtime.showtime} - {new Date(showtime.date).toLocaleDateString()}\n//                           </button>\n//                         ))\n//                       )}\n//                     </div>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Modal Popup */}\n//         {showModal && !bookingConfirmed && (\n//           <div className=\"modal-overlay\">\n//             <div className=\"modal-content\">\n//               <h3>Booking Details</h3>\n//               <p><strong>Movie:</strong> {modalContent.movieName}</p>\n//               <p><strong>Cinema:</strong> {modalContent.cinemaName}</p>\n//               <p><strong>Showtime:</strong> {modalContent.showtime}</p>\n//               <button onClick={confirmBookingModal}>Confirm Booking</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Confirmation Popup */}\n//         {bookingConfirmed && (\n//           <div className=\"modal-overlay\">\n//             <div className=\"modal-content\">\n//               <p style={{ fontWeight: 'bold' }}>Booking Confirmed!!</p>\n//               <button onClick={closeModal}>Close</button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default BookNow;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/bookNow.css';\n\nfunction BookNow({ user }) {\n  const { movieId } = useParams(); // Get the movie ID from the URL\n  const [movie, setMovie] = useState(null);\n  const [cinemas, setCinemas] = useState([]);\n  const [selectedCinema, setSelectedCinema] = useState(null);\n  const [selectedShowtime, setSelectedShowtime] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false); // State for showing the modal\n  const [modalContent, setModalContent] = useState({}); // State to hold modal content\n  const [bookingConfirmed, setBookingConfirmed] = useState(false); // State to track booking confirmation\n\n  // Fetch movie details\n  useEffect(() => {\n    fetch(`http://localhost:5001/movies/${movieId}`)\n      .then((response) => response.json())\n      .then((data) => setMovie(data))\n      .catch((error) => setError(error.message));\n  }, [movieId]);\n\n  // Fetch cinemas for the movieId\n  useEffect(() => {\n    fetch(`http://localhost:5001/cinemas/movie/${movieId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message && data.message === \"No cinemas found for this movie\") {\n          setError(\"No cinemas found for this movie.\");\n        } else {\n          setCinemas(data);\n          setError(null); // Clear any previous errors if cinemas are found\n        }\n      })\n      .catch((error) => setError(error.message));\n  }, [movieId]);\n\n  // Handle showtime selection\n  const handleShowtimeSelect = (showtime) => {\n    setSelectedShowtime(showtime);\n    if (selectedCinema) {\n      const selectedCinemaDetails = cinemas.find(cinema => cinema._id === selectedCinema);\n      \n      // Set the modal content\n      setModalContent({\n        movieId: movieId,\n        movieName: movie.movie_name,\n        cinemaName: selectedCinemaDetails?.cinema_name,\n        showtime: showtime.showtime,\n      });\n      setShowModal(true); // Show the modal\n    }\n  };\n\n  // Confirm the booking and show confirmation\n  const confirmBookingModal = () => {\n    setBookingConfirmed(true); // Mark booking as confirmed\n  };\n\n  // Close the modal\n  const closeModal = () => {\n    setShowModal(false); // Close the modal\n    setBookingConfirmed(false); // Reset booking confirmation state\n  };\n\n  // Check if movie is available\n  if (!movie) {\n    return <p>Loading movie details...</p>;\n  }\n\n  return (\n    <div className=\"book-now-page\">\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>{user ? user.name : 'Guest'}</h3>\n        </div>\n        <div className=\"sidebar-links\">\n          {/* <a href=\"/my-account\">My Account</a> */}\n          <a href=\"/my-bookings\">My Bookings</a>\n          <a href=\"/\">Logout</a>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <header>\n          <h1>Book Your Movie Ticket</h1>\n          <h4>Movie: {movie.movie_name}</h4>\n        </header>\n\n        {/* Error message */}\n        {error && (\n          <p className=\"error-message\">\n            {error}\n          </p>\n        )}\n\n        {/* Cinema Selection */}\n        {cinemas.length === 0 && !error && (\n          <div className=\"no-cinemas\">\n            <p className=\"error-message\">\n              No cinemas available for booking for this movie.\n            </p>\n          </div>\n        )}\n\n        {cinemas.length > 0 && !error && (\n          <div className=\"cinema-selection\">\n            <h2>Select Your Cinema</h2>\n            <div className=\"cinema-list\">\n              {cinemas.map((cinema) => (\n                <div\n                  key={cinema._id}\n                  className={`cinema-item ${selectedCinema === cinema._id ? 'selected' : ''}`}\n                  onClick={() => setSelectedCinema(cinema._id)} // Set selected cinema\n                >\n                  <h3>{cinema.cinema_name}</h3>\n                  {selectedCinema === cinema._id && (\n                    <div className=\"showtimes\">\n                      <h4>Available Showtimes:</h4>\n                      {cinema.showtimes.length === 0 ? (\n                        <p>No showtimes available.</p>\n                      ) : (\n                        cinema.showtimes.map((showtime, index) => (\n                          <button\n                            key={index}\n                            className=\"showtime-btn\"\n                            onClick={() => handleShowtimeSelect(showtime)} // Handle showtime selection\n                          >\n                            {showtime.showtime} - {new Date(showtime.date).toLocaleDateString()}\n                          </button>\n                        ))\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Modal Popup */}\n        {showModal && !bookingConfirmed && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n              <h3>Booking Details</h3>\n              <p><strong>Movie:</strong> {modalContent.movieName}</p>\n              <p><strong>Cinema:</strong> {modalContent.cinemaName}</p>\n              <p><strong>Showtime:</strong> {modalContent.showtime}</p>\n              <button onClick={confirmBookingModal}>Confirm Booking</button>\n            </div>\n          </div>\n        )}\n\n        {/* Confirmation Popup */}\n        {bookingConfirmed && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n              <p style={{ fontWeight: 'bold' }}>Booking Confirmed!!</p>\n              <button onClick={closeModal}>Close</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BookNow;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}